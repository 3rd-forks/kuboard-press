apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/bound-by-controller: "yes"
  finalizers:
  - kubernetes.io/pv-protection
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:accessModes: {}
        f:capacity:
          .: {}
          f:storage: {}
        f:csi:
          .: {}
          f:driver: {}
          f:fsType: {}
          f:volumeAttributes:
            .: {}
            f:diskSelector: {}
            f:nodeSelector: {}
            f:numberOfReplicas: {}
            f:staleReplicaTimeout: {}
          f:volumeHandle: {}
        f:persistentVolumeReclaimPolicy: {}
        f:storageClassName: {}
        f:volumeMode: {}
    manager: longhorn-manager
    operation: Update
    time: "2021-06-30T03:30:33Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:pv.kubernetes.io/bound-by-controller: {}
      f:spec:
        f:claimRef:
          .: {}
          f:apiVersion: {}
          f:kind: {}
          f:name: {}
          f:namespace: {}
          f:resourceVersion: {}
          f:uid: {}
      f:status:
        f:phase: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-06-30T03:30:34Z"
  name: test-many
  resourceVersion: "81091503"
  selfLink: /api/v1/persistentvolumes/test-many
  uid: 8536b1c4-1d72-40c8-9300-62ae9926071a
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 2Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: test-many
    namespace: longhorn-system
    resourceVersion: "81091501"
    uid: a13eecac-3337-4a07-b94a-d9150c488d40
  csi:
    driver: driver.longhorn.io
    fsType: xfs
    volumeAttributes:
      diskSelector: ""
      nodeSelector: ""
      numberOfReplicas: "1"
      staleReplicaTimeout: "20"
    volumeHandle: test-many
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-static
  volumeMode: Filesystem